class Solution {
    	public int[] twoSum(int[] numbers, int target) {
        	int left=0, right = numbers.length-1;
		while(left<right){
			if(numbers[left] + numbers[right] == target){
				break;
			}else if(numbers[left] + numbers[right] > target){
				right--;
			}else{
				left++;
			}
		}
		return new int[] {left+1, right+1};
    	}
}
//----------------------------------------------------(accept)

二分法
binary search
两个 pointer ，一个在开头，一个在结尾，和 target 比较移动 pointer

Time complexity : O(n). Each of the n elements is visited at most once, thus the time complexity is O(n).

Space complexity : O(1). We only use two indexes, the space complexity is O(1).