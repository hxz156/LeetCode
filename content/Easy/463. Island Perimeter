class Solution {
    	public int islandPerimeter(int[][] grid) {
		int count=0;
		int edge = 0;
        	for(int i=0; i<grid.length; i++){
			for(int j=0; j<grid[0].length; j++){
				if(grid[i][j] == 1){
					count++;
					if(j<=grid[0].length-2 && grid[i][j+1] == 1)	edge++;
					if(i<=grid.length-2 && grid[i+1][j] == 1)	edge++;
				}
			}
		}
		return count*4 - (edge)*2;
    	}
}
//-----------------------------------------------------------------(accept)
faster than 99.96%		 less than 99.30% 

计算出有多少 1 ， 乘以 4 就是所有的岛屿的周长。

现在就是要计算有多少公共边。不同的排列导致的公共边不同。对一个 1 ， 我们只看他的右边和下面，就能计算出所有，不会重复。

Explanation of this elegant solution:

Only check right and down, because left and up will get checked by a previous element.
A neighbor subtracts a side from the perimeter. But since only count right and down, we have to double count. thus -2*neighbors.






