class Solution {
    	public int singleNumber(int[] nums) {
    		int ans = 0;
		for(int i=0; i<nums.length; i++){
			ans ^=nums[i];
		}
		return ans;
    	}
}
//------------------------------------------------(accept)
faster than 100.00%		less than 99.79%

known that A XOR A = 0 and the XOR operator is commutative, the solution will be very straightforward.

由于数字在计算机是以二进制存储的，每位上都是0或1，如果我们把两个相同的数字异或，0与0 '异或' 是0，1与1 '异或' 也是0，那么我们会得到0。根据这个特点，我们把数组中所有的数字都 '异或' 起来，则每对相同的数字都会得0，然后最后剩下来的数字就是那个只有1次的数字。

Concept

If we take XOR of zero and some bit, it will return that bit
a⊕0=a
If we take XOR of two same bits, it will return 0
a⊕a=0

(a⊕a)⊕b=0⊕b=b









