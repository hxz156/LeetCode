class Solution {
    	public void moveZeroes(int[] nums) {
        	if(nums == null || nums.length==0) return;
		int cur = 0, search = 0;

		for(int num : nums){
			if(num != 0){
				nums[cur] = num;
				cur++;
			}
		}
		for(int i=cur; i<nums.length; i++){
			nums[i] = 0;
		}
    	}
}
//-------------------------------(accept)

两个指针，一个是现在的位置，另一个是去看，如果不是 0 就放在现在的位置， 如果是就是不看

最后再把剩余的变成 0 

下面是练习利用 comparator , 但是这道题不适用

//----------------------
class Solution {
    	public void moveZeroes(int[] nums) {
		Comparator<Integer> myComparator = new Comparator<Integer>(){
			@Override
			public int compare(Integer i1, Integer i2){
				// i1 在 i2 前面就 return -1;
				if(i1 == 0){
					if(i2 == 0) return 0;
					return 1;
				}
				if(i2 == 0) return -1;
				return 0;
			}
		};
		Integer[] nums2 = new Integer[nums.length];
		int i =0;
		for(int num : nums){
			nums2[i++] = (Integer)num;
		}
        	Arrays.sort(nums2, myComparator);
		for(int k=0; k<nums.length; k++){
			nums[k]=nums2[k];
		}
    	}
}

//--------------------------------------(accept)
需要把 int 转化成 Integer






